{
  "nodes": [
    {
      "parameters": {
        "resource": "worksheet",
        "operation": "readRows",
        "workbook": {
          "__rl": true,
          "value": "012SESQSNOH6WB5XTPBRFKGVSIE4WLN7ZY",
          "mode": "list",
          "cachedResultName": "Solicitud Facturacion",
          "cachedResultUrl": "https://campuslands-my.sharepoint.com/personal/sergio_rojas_campuslands_com/_layouts/15/Doc.aspx?sourcedoc=%7B1EAC3FAE-6FDE-4A0C-A356-48272CB6FF38%7D&file=Solicitud%20Facturacion.xlsx&action=default&mobileredirect=true&DefaultItemOpen=1"
        },
        "worksheet": {
          "__rl": true,
          "value": "{00000000-0001-0000-0100-000000000000}",
          "mode": "list",
          "cachedResultName": "Solicitud",
          "cachedResultUrl": "https://campuslands-my.sharepoint.com/personal/sergio_rojas_campuslands_com/_layouts/15/Doc.aspx?sourcedoc=%7B1EAC3FAE-6FDE-4A0C-A356-48272CB6FF38%7D&file=Solicitud%20Facturacion.xlsx&action=default&mobileredirect=true&DefaultItemOpen=1&activeCell=Solicitud!A1"
        },
        "useRange": true,
        "range": "Solicitud!V2",
        "options": {
          "rawData": true
        }
      },
      "type": "n8n-nodes-base.microsoftExcelTool",
      "typeVersion": 2.1,
      "position": [
        720,
        544
      ],
      "id": "a413817c-2632-422f-b02d-b7961f4e70ac",
      "name": "GetLastNoSoli",
      "credentials": {
        "microsoftExcelOAuth2Api": {
          "id": "SLW8IoBQXioZ00J7",
          "name": "Microsoft Excel account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTimeTool",
      "typeVersion": 2,
      "position": [
        848,
        544
      ],
      "id": "3cd91981-b88c-427e-b50a-9f708d60c155",
      "name": "Date & Time"
    },
    {
      "parameters": {
        "resource": "worksheet",
        "operation": "append",
        "workbook": {
          "__rl": true,
          "value": "012SESQSNOH6WB5XTPBRFKGVSIE4WLN7ZY",
          "mode": "list",
          "cachedResultName": "Solicitud Facturacion",
          "cachedResultUrl": "https://campuslands-my.sharepoint.com/personal/sergio_rojas_campuslands_com/_layouts/15/Doc.aspx?sourcedoc=%7B1EAC3FAE-6FDE-4A0C-A356-48272CB6FF38%7D&file=Solicitud%20Facturacion.xlsx&action=default&mobileredirect=true&DefaultItemOpen=1"
        },
        "worksheet": {
          "__rl": true,
          "value": "{00000000-0001-0000-0100-000000000000}",
          "mode": "list",
          "cachedResultName": "Solicitud",
          "cachedResultUrl": "https://campuslands-my.sharepoint.com/personal/sergio_rojas_campuslands_com/_layouts/15/Doc.aspx?sourcedoc=%7B1EAC3FAE-6FDE-4A0C-A356-48272CB6FF38%7D&file=Solicitud%20Facturacion.xlsx&action=default&mobileredirect=true&DefaultItemOpen=1&activeCell=Solicitud!A1"
        },
        "fieldsUi": {
          "values": [
            {
              "column": "Nit cliente",
              "fieldValue": "={{ $fromAI('nit_cliente', '', 'string') }}"
            },
            {
              "column": "Nombre Cliente",
              "fieldValue": "={{ $fromAI('nombre_cliente', '', 'string') }}"
            },
            {
              "column": "Linea Negocio",
              "fieldValue": "={{ $fromAI('linea_negocio', '', 'string') }}"
            },
            {
              "column": "Cuenta",
              "fieldValue": "={{ $fromAI('cuenta', '', 'string') }}"
            },
            {
              "column": "Descripci√≥n",
              "fieldValue": "={{ $fromAI('descripcion', '', 'string') }}"
            },
            {
              "column": "Cantidad",
              "fieldValue": "={{ $fromAI('cantidad', '', 'string') }}"
            },
            {
              "column": "Precio Unit",
              "fieldValue": "={{ $fromAI('precio_unit', '', 'string') }}"
            },
            {
              "column": "Plazo Pago",
              "fieldValue": "={{ $fromAI('plazo_pago', '', 'string') }}"
            },
            {
              "column": "cia",
              "fieldValue": "={{ $fromAI('cia', '', 'string') }}"
            },
            {
              "column": "No Solicitud",
              "fieldValue": "={{ $fromAI('no_solicitud', '', 'string') }}"
            },
            {
              "column": "Fecha Solicitud",
              "fieldValue": "={{ $fromAI('fecha_solicitud', '', 'string') }}"
            },
            {
              "column": "Comercial",
              "fieldValue": "={{ $fromAI('comercial', '', 'string') }}"
            },
            {
              "column": "Observaciones",
              "fieldValue": "={{ $fromAI('observaciones', '', 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.microsoftExcelTool",
      "typeVersion": 2.1,
      "position": [
        976,
        544
      ],
      "id": "dac92e3a-3794-41bc-b9e6-ef09717de81b",
      "name": "insertar_datos",
      "credentials": {
        "microsoftExcelOAuth2Api": {
          "id": "SLW8IoBQXioZ00J7",
          "name": "Microsoft Excel account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7ff09b81-1ac8-428d-bfbc-e26062c00802",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "7fb22411-8143-48ac-b210-6eb9c16d08ae",
              "name": "sessionId",
              "value": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        240,
        416
      ],
      "id": "a3c1af27-a1c2-4794-a310-3041eec56dd2",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        16,
        416
      ],
      "id": "b72e66d6-3eab-463e-a7cd-15b23480c5bb",
      "name": "Transcribe a recording",
      "credentials": {
        "openAiApi": {
          "id": "zfgxoBAEurymVs3q",
          "name": "apiracines"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.vozId }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -208,
        416
      ],
      "id": "f5055b14-824c-47aa-b3e0-df27fd69708d",
      "name": "Get a file",
      "webhookId": "13be71cc-50ef-483f-b7c7-09516a5e20aa",
      "credentials": {
        "telegramApi": {
          "id": "cWZMSmJP5WC4OZ9R",
          "name": "franco"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6aaaab03-c68f-4cf7-841a-baba440e4afb",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "212e216b-ee1e-4077-87f2-49c3bde8c6c4",
              "name": "sessionId",
              "value": "={{ $json.sessionId }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        240,
        224
      ],
      "id": "0ea36837-a68d-4dc0-8189-2a4fb3f40f3b",
      "name": "textofinal"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9f38fb4c-1929-4c61-ac26-c4496a71d9d7",
              "leftValue": "={{ $json.text }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -432,
        320
      ],
      "id": "abc4e6ff-fde4-4d60-a9db-db0f89fa6d9d",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3971e84f-a0a5-4f2f-9bf9-7205abe9973f",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            },
            {
              "id": "b4c53cbb-d63e-444f-a36e-8cc9f6f5f79e",
              "name": "sessionId",
              "value": "={{ $json.message.from.id }}",
              "type": "number"
            },
            {
              "id": "c786f3a7-d056-4144-bfa7-e12e6757b521",
              "name": "vozId",
              "value": "={{ $json.message.voice.file_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -656,
        320
      ],
      "id": "0f1da3e3-20ae-4430-9fb8-60373e179f82",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1312,
        320
      ],
      "id": "97460def-0ff1-42bb-9839-7ba8bad0c8ed",
      "name": "Send a text message",
      "webhookId": "a59a0f85-7f7b-4e71-b3e9-267b2e729c87",
      "credentials": {
        "telegramApi": {
          "id": "cWZMSmJP5WC4OZ9R",
          "name": "franco"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 30
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        592,
        544
      ],
      "id": "98977792-5cd2-425e-b4d9-5f27cb87838a",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "4l1OzbBzHDyGiOzA",
          "name": "Racines Psql"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        464,
        544
      ],
      "id": "cf420f47-005f-47ae-8a17-6e3507d839f1",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "zfgxoBAEurymVs3q",
          "name": "apiracines"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -880,
        320
      ],
      "id": "8842a8f8-0181-4db1-8244-6b6167f7bb2a",
      "name": "Telegram Trigger",
      "webhookId": "e93b9951-9d14-4e8c-8cc1-1dbe6510950f",
      "credentials": {
        "telegramApi": {
          "id": "cWZMSmJP5WC4OZ9R",
          "name": "franco"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('textofinal').item.json.text }}",
        "options": {
          "systemMessage": "    Eres un asistente conversacional amigable que ayudar√° al comercial a registrar solicitudes con m√∫ltiples √≠tems o en su defecto con un √∫nico item para ser guardados en un archivo Excel.\n\n    ## Flujo de Conversaci√≥n:\n\n    ### 1. Inicializaci√≥n de Nueva Solicitud\n    - Usa la herramienta 'GetLastNoSoli' para obtener el √∫ltimo n√∫mero de solicitud\n    - Verifica bien el Numero de Solicitud, comprueba que sea el que te devuelve la herramienta\n    - Suma 1 al valor obtenido para generar el nuevo \"No Solicitud\"\n    - Usa la herramienta 'Date & Time' para obtener la fecha actual como \"Fecha Solicitud\"\n    - IMPORTANTE: Estos valores se mantienen constantes para TODOS los √≠tems de la misma solicitud\n\n    ### 2. Recolecci√≥n de Campos Constantes (UNA SOLA VEZ)\n    Solicita los siguientes campos que ser√°n iguales para todos los √≠tems:\n    - **Comercial** (responsable del registro)\n    - **Nit cliente** (n√∫mero de identificaci√≥n del cliente)\n    - **Nombre Cliente** (raz√≥n social del cliente)\n    - **Correo** (se guardar√° en el campo Observaciones)\n\n    **Confirma estos datos con el usuario antes de continuar.**\n    **Una vez esos campos son recolectados usa la herrmaienta jsonConst para crear un json con esos datos**\n\n    ### 3. Recolecci√≥n de Campos Variables (PARA CADA √çTEM)\n    Para cada √≠tem, solicita los siguientes campos:\n    - **Linea Negocio**\n    - **Cuenta** \n    - **Descripci√≥n**\n    - **Cantidad** (num√©rico)\n    - **Precio Unit** (precio unitario, num√©rico)\n    - **Plazo Pago** (t√©rminos de pago)\n    - **cia** (compa√±√≠a)\n\n    ### 4. Guardado Inmediato\n    Despu√©s de recopilar cada √≠tem completo, recuerda los datos constantes que estan en el json de la herramienta jsonConst y guarda INMEDIATAMENTE usando la funci√≥n insertar_datos con estos par√°metros EXACTOS:\n\n    insertar_datos(\n    nit_cliente=\"[Nit cliente]\",\n    nombre_cliente=\"[Nombre Cliente]\",\n    linea_negocio=\"[Linea Negocio]\",\n    cuenta=\"[Cuenta]\",\n    descripcion=\"[Descripci√≥n]\",\n    cantidad=\"[Cantidad]\",\n    precio_unit=\"[Precio Unit]\",\n    plazo_pago=\"[Plazo Pago]\",\n    cia=\"[cia]\",\n    no_solicitud=\"[No Solicitud]\",\n    fecha_solicitud=\"[Fecha Solicitud]\",\n    comercial=\"[Comercial]\",\n    observaciones=\"[Correo]\"\n    )\n\n    ### 5. Continuaci√≥n con M√∫ltiples √çtems\n    Inmediatamente despu√©s de guardar cada √≠tem, pregunta:\n    **\"¬øDeseas agregar otro √≠tem a esta misma solicitud No. [n√∫mero]?\"**\n\n    - Si responde **\"S√ç\"**: Vuelve al paso 3 (solo pide campos variables, mant√©n los constantes)\n    - Si responde **\"NO\"**: Finaliza la solicitud\n\n    ### 6. Finalizaci√≥n\n    Cuando termine de agregar √≠tems:\n    **\"‚úÖ ¬°Solicitud No. [n√∫mero] registrada exitosamente con [X] √≠tem(s)!\"**\n\n    ## Reglas Cr√≠ticas:\n\n    1. **CAMPOS CONSTANTES**: Se solicitan UNA SOLA VEZ por solicitud\n    2. **CAMPOS VARIABLES**: Se solicitan para CADA √≠tem individual  \n    3. **GUARDADO INMEDIATO**: Cada √≠tem se guarda TAN PRONTO como se complete\n    4. **MISMO N√öMERO**: Todos los √≠tems de una solicitud comparten el mismo \"No Solicitud\"\n    5. **NOMBRES EXACTOS**: Usa los nombres de par√°metros EXACTAMENTE como se especifican\n    6. **CONFIRMACI√ìN**: Siempre confirma datos importantes antes de guardar\n    7. **CANCELACI√ìN**: Si el usuario escribe \"cancelar\", termina inmediatamente\n    8. **VALIDACI√ìN**: Antes de guardar, verifica que todos los campos requeridos est√©n completos\n    9. **ORDEN**: Mant√©n el orden de los campos tal como se especifica en la funci√≥n\n    10. **PERSISTENCIA**: Recuerda los valores constantes durante toda la sesi√≥n de una solicitud\n\n    ## Formato de Respuesta:\n    - Mant√©n un tono amable y profesional\n    - Pide UN campo a la vez para mayor claridad\n    - Confirma cada √≠tem antes de guardarlo\n    - Usa emojis para hacer m√°s amigable la interacci√≥n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        688,
        320
      ],
      "id": "5de1cf15-64ec-43d3-a939-d90d7388823b",
      "name": "AI_constante"
    },
    {
      "parameters": {
        "jsCode": "// Este nodo recibe datos constantes y los guarda en la ejecuci√≥n\nconst constants = {\n  no_solicitud: $json.no_solicitud,\n  fecha_solicitud: $json.fecha_solicitud,\n  comercial: $json.comercial,\n  nit_cliente: $json.nit_cliente,\n  nombre_cliente: $json.nombre_cliente,\n  observaciones: $json.correo\n};\n\n// Guardar en staticData (solo disponible mientras dura el flujo)\nconst data = $getWorkflowStaticData('node');\ndata.camposConstantes = constants;\n\nreturn [{ json: { message: \"Constantes guardadas correctamente\" } }];\n\n\n"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.3,
      "position": [
        1104,
        544
      ],
      "id": "34d3eff9-d3ad-4cc4-909f-d1cff30bb3d4",
      "name": "jsonConst"
    }
  ],
  "connections": {
    "GetLastNoSoli": {
      "ai_tool": [
        [
          {
            "node": "AI_constante",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "ai_tool": [
        [
          {
            "node": "AI_constante",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "insertar_datos": {
      "ai_tool": [
        [
          {
            "node": "AI_constante",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "AI_constante",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "textofinal": {
      "main": [
        [
          {
            "node": "AI_constante",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "textofinal",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI_constante",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI_constante",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI_constante": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "jsonConst": {
      "ai_tool": [
        [
          {
            "node": "AI_constante",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "4e1a7b477a878cc564967057cda196195d75f160eec0a1f56b2314e4842201a2"
  }
}